/* eslint-disable */
export default async () => {
    const t = {
        [".pnpm/@nestjs+common@10.4.15_prqteaxeztlh7hcpcoxjb3p2le/node_modules/@nestjs/common/enums/http-status.enum"]: await import(".pnpm/@nestjs+common@10.4.15_prqteaxeztlh7hcpcoxjb3p2le/node_modules/@nestjs/common/enums/http-status.enum")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/entities/format-response.entity"), { "FormatResponseEntity": { statusCode: { required: true, enum: t[".pnpm/@nestjs+common@10.4.15_prqteaxeztlh7hcpcoxjb3p2le/node_modules/@nestjs/common/enums/http-status.enum"].HttpStatus }, data: { required: false }, message: { required: true, type: () => String } }, "NullResponseEntity": { statusCode: { required: true, enum: t[".pnpm/@nestjs+common@10.4.15_prqteaxeztlh7hcpcoxjb3p2le/node_modules/@nestjs/common/enums/http-status.enum"].HttpStatus }, data: { required: false, type: () => String }, message: { required: true, type: () => String } } }], [import("./cat/dto/create-cat.dto"), { "CreateCatDto": { name: { required: true, type: () => String, description: "\u540D\u5B57" }, age: { required: true, type: () => Number, description: "\u5E74\u9F84", minimum: 1 }, sex: { required: false, type: () => String, description: "\u6027\u522B" } } }], [import("./cat/dto/update-cat.dto"), { "UpdateCatDto": {} }], [import("./captcha/entities/captcha.entity"), { "CaptchaEntity": { captcha: { required: false, type: () => String, description: "base64 \u683C\u5F0F\u9A8C\u8BC1\u7801", default: "data:image/svg+xml;base64,***" } } }], [import("./cat/entities/cat.entity"), { "Cat": {} }], [import("./auth/dto/login.dto"), { "LoginDto": { username: { required: true, type: () => String, description: "\u7528\u6237\u540D" }, password: { required: true, type: () => String, description: "\u5BC6\u7801", pattern: "/^[a-zA-Z](?=.*[.?!&_])(?=.*\\d)[a-zA-Z\\d.?!&_]{5,15}$/" }, captcha: { required: true, type: () => String, description: "\u9A8C\u8BC1\u7801", pattern: "/^[a-zA-Z0-9]{4}$/" } } }], [import("./auth/dto/password.dto"), { "PasswordDto": { oldPassword: { required: true, type: () => String, description: "\u539F\u5BC6\u7801", pattern: "/^[a-zA-Z](?=.*[.?!&_])(?=.*\\d)[a-zA-Z\\d.?!&_]{5,15}$/" }, newPassword: { required: true, type: () => String, description: "\u65B0\u5BC6\u7801", pattern: "/^[a-zA-Z](?=.*[.?!&_])(?=.*\\d)[a-zA-Z\\d.?!&_]{5,15}$/" } } }], [import("./auth/dto/refresh-token.dto"), { "RefreshTokenDto": { refreshToken: { required: true, type: () => String, description: "\u5237\u65B0\u4EE4\u724C" } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "users": {} } }], [import("./cat/cat.controller"), { "CatController": { "create": { type: String }, "findAll": { type: String }, "findOne": { type: String }, "update": { type: String }, "remove": { type: String } } }], [import("./auth/auth.controller"), { "AuthController": { "login": { description: "\u7528\u6237\u767B\u9646", type: Object }, "refreshToken": { type: Object } } }], [import("./captcha/captcha.controller"), { "CaptchaController": { "getCaptcha": {} } }]] } };
};